plugins {
	id 'org.springframework.boot' version '2.5.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'war'
	//A ajouter
	id 'org.hidetake.swagger.generator' version '2.18.2'
}

group = 'be.ipam'
version = '0.0.1'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//A Ajouter
	swaggerCodegen 'org.openapitools:openapi-generator-cli:4.3.1'
	compileOnly 'io.swagger:swagger-annotations:1.6.2'
	compileOnly 'org.springframework.boot:spring-boot-starter-validation'
	compileOnly 'org.openapitools:jackson-databind-nullable:0.2.1'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	
	//DB
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
    
    implementation "io.springfox:springfox-boot-starter:3.0.0"
    implementation "io.springfox:springfox-swagger-ui:3.0.0"
    
    //Lombok
    compileOnly 'org.projectlombok:lombok:1.18.22'
	annotationProcessor 'org.projectlombok:lombok:1.18.22'
	
	testCompileOnly 'org.projectlombok:lombok:1.18.22'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
	
	//Security
	//implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	//implementation 'com.auth0:java-jwt:3.12.0'
	implementation 'org.springframework.boot:spring-boot-starter-security:2.5.6'
	testImplementation 'org.springframework.security:spring-security-test:5.5.3'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'org.mindrot:jbcrypt:0.4'
    
}

swaggerSources {
  def typeMappings = 'URI=URI'
  def importMappings = 'URI=java.net.URI'
  spotify {
    def apiYaml = "${rootDir}/src/main/resources/api/openapi.yaml"
    def configJson = "${rootDir}/src/main/resources/api/config.json"
    inputFile = file(apiYaml)
    def ignoreFile = file("${rootDir}/src/main/resources/api/.openapi-generator-ignore")
    code {
      language = 'spring'
      configFile = file(configJson)
      rawOptions = ['--ignore-file-override', ignoreFile, '--type-mappings',
										typeMappings, '--import-mappings', importMappings] as List<String>
      components = [models: true, apis: true, supportingFiles: 'ApiUtil.java']
      //dependsOn validation // Should be uncommented once plugin starts supporting OA 3 validation
    }
  }
}

compileJava.dependsOn swaggerSources.spotify.code
sourceSets.main.java.srcDir "${swaggerSources.spotify.code.outputDir}/src/main/java"
sourceSets.main.resources.srcDir "${swaggerSources.spotify.code.outputDir}/src/main/resources"

test {
	useJUnitPlatform()
}
